pipeline {
    agent any
    parameters {string(name: 'reponame', defaultValue: '', description: '') }
    tools {
        maven 'Maven'
    }
    stages {
        // for generating new image version everytime running the pipeline
        stage ('incremental version') {
         steps {
             script{
            // def reponame = "samehpalas/demo-app"  //instead, value as an input from the customer as shown above
             def version = "0"
             def tag= "$version-$BUILD_NUMBER" // BUILD_NUMBER of jenkins to increase image dynamically according to build number
             env.imagename = "$reponame:$tag"  // env.xx to be called from another stage
          }
         }
    }
     // stage('buildJAR') {
     //     steps {
     //        echo 'building the Application... '
     //        sh 'mvn package'
    //     }
    //  }

        stage('buildIMG') {
            steps {
                echo 'Building the docker image... '
                withCredentials([usernamePassword(credentialsId: 'sameh-dockerhub-cred', usernameVariable: 'USER', passwordVariable: 'PASS')])
                 {
                   sh " docker build -t samehpalas/$imagename target/ "  //where docker_file located
                   sh " echo $PASS | docker login -u $USER --password-stdin "
                   sh " docker push samehpalas/$imagename "
            }
            }
        }

        stage('deploy') {
            environment { //authentiction to AWS for AWS EKS
                AWS_ACCESS_KEY_ID = credentials('jenkins_aws_access_key_id')
                AWS_SECRET_ACCESS_KEY = credentials('jenkins_aws_secret_access_key')
                APP_NAME= "fe-project"
            }
            steps {
                echo 'Deploying the Application... '
               // sh 'kubectl create deployment nginx-web --image=nginx'
                sh " envsubst < kubernetes/deployment.yaml | kubectl apply -f -"
            }
        }
       // stage ('modify and push') {
         //   steps {
           //   script {  //commit version update
             //  withCredentials([usernamePassword(credentialsId: 'sameh-gihub-cred', usernameVariable: 'USER', passwordVariable: 'PASS')]) { //credentials
               //  sh 'git init'
                 //sh 'git config --global user.name "jenkins"'  // Set the Git user information that will push
             //    sh 'git config --global user.email "jenkins@example.com"'
               //  sh "git remote set-url origin https://${USER}:${PASS}@github.com/samehpalas/jenkins-shared-library.git"  //pushing to remote repo
                 //sh 'git add .'
                 //sh 'git commit -m "ci : version commit bump "'
                 //sh 'git push origin HEAD:main'
      //        }
        //    }
        // }
       // }
    }
}
